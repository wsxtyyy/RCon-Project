from vkbottle.bot import BotLabeler, Message
from functions import *
from permission_rule import Permission, PermissionOwners

import difflib
import re

rcon_labeler = BotLabeler()
rcon_labeler.vbml_ignore_case = True

prefix = get_prefix()
owner_id = get_owner()


@rcon_labeler.private_message(PermissionOwners(), text='{0}—Å–µ—Ä–≤–µ—Ä —É–¥–∞–ª–∏—Ç—å <name>'.format(prefix))
async def cmd_delete_rcon_server(message: Message, name):
    try:

        db.cur.execute(f'SELECT name FROM servers WHERE name = "{name}"')
        name_ = db.cur.fetchone()

        if name_ is not None:

            db.cur.execute(f'DELETE FROM servers WHERE name = "{name}"')
            db.con.commit()

            await message.reply('‚ôª | –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!')

        else:
            await message.reply(f'‚ùó | –°–µ—Ä–≤–µ—Ä —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º [id0|{name}] –Ω–µ –Ω–∞–π–¥–µ–Ω!')

    except Exception as e:
        await message.reply(f'‚ö† | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: \n {e=}, \n {type(e)=} ')


@rcon_labeler.private_message(PermissionOwners(), text='{0}—É–¥–∞–ª–∏—Ç—å <user>'.format(prefix))
async def cmd_delete_user(message: Message, user):

    try:
        new_id = re.findall(r"[0-9]+", user)[0]

        db.cur.execute(f'SELECT id FROM users WHERE id = {int(new_id)}')
        id_user = db.cur.fetchone()

        if id_user is not None:

            if id_user[0] == owner_id:
                await message.reply(f'‚ùó | [id{id_user[0]}|–í–ª–∞–¥–µ–ª—å—Ü–∞] –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å!')
                return

            db.cur.execute(f'DELETE FROM users WHERE id = {id_user[0]}')
            db.con.commit()

            await message.reply(f'‚ôª | [id{id_user[0]}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —Å –±–∞–∑—ã!')

        else:
            await message.reply(f'‚ùó | [id{id_user[0]}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!')

    except Exception as e:
        await message.reply(f'‚ö† | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: \n {e=}, \n {type(e)=} ')



@rcon_labeler.private_message(PermissionOwners(), text='{0}—Å–µ—Ä–≤–µ—Ä –≥–µ–Ω <name> <ip> <port> <passw>'.format(prefix))
async def cmd_add_server(message: Message, name, ip, port, passw):
    try:

        if easy_already_server(name_server=name):
            await message.reply('‚ö† | –¢–∞–∫–æ–µ –∏–º—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        else:
            w_server(name, ip, port, passw)

            await message.reply(
                '‚ôª | –°–µ—Ä–≤–µ—Ä {0}, —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: \n- –ü–∞—Ä–æ–ª—å: {1}\n- –ê–π–ø–∏: {2} : {3}\n\n–î–æ–±–∞–≤–ª–µ–Ω!'.format(name,
                                                                                                        passw,
                                                                                                        ip,
                                                                                                        port))
    except Exception as e:
        await message.reply(f'‚ö† | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: \n {e=}, \n {type(e)=} ')


@rcon_labeler.private_message(PermissionOwners(), text='{0}–ø—Ä–∞–≤–∞ —Å–µ—Ç <user> <perms>'.format(prefix))
async def cmd_set_perms(message: Message, user, perms):
    new_id = re.findall(r"[0-9]+", user)[0]

    user = await message.ctx_api.users.get(new_id)
    name_user = str(user[0].first_name + ' ' + user[0].last_name)

    if easy_get_user(id=new_id):
        if easy_get_perm(perm=perms, id=new_id) == perms:
            await message.reply('‚ö† | [id{0}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–∂–µ –∏–º–µ–µ—Ç —Ç–∞–∫–∏–µ –ø—Ä–∞–≤–∞'.format(new_id))

    if perms not in all_perms(ret='massive'):
        await message.reply('‚ö† | –ü—Ä–∞–≤–∞ {0} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!'.format(perms))

    elif easy_get_user(id=new_id):
        if perms in all_perms(ret='massive'):
            easy_update_perm(id=new_id, perm=perms)
            await message.reply('‚ôª | [id{0}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —Å –ø—Ä–∞–≤–∞–º–∏ {1}, –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω!'.format(new_id, perms))

    elif perms in all_perms(ret='massive'):
        easy_create_user(str(new_id), name_user, perms, 0)

        await message.reply('‚ôª | [id{0}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —Å –ø—Ä–∞–≤–∞–º–∏ {1}, –±—ã–ª —Å–æ–∑–¥–∞–Ω!'.format(new_id, perms))


@rcon_labeler.private_message(PermissionOwners(), text='{0}—Å–µ—Ä–≤–µ—Ä–∞'.format(prefix))
async def cmd_all_servers(message: Message):
    await message.reply("‚ôª | –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä–∞: \n\n" +
                        all_servers())


@rcon_labeler.private_message(PermissionOwners(), text='{0}–ø—Ä–∞–≤–∞ <name> –∑–Ω–∞—á–µ–Ω–∏—è'.format(prefix))
async def cmd_perms_list(message: Message, name):
    try:
        if name in all_perms(ret='massive'):
            await message.reply("‚ôª | –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ {0}: \n\n".format(name) +
                                "–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞: {0}".format(check_perms(name_perms=name, ret='perms')))
        else:
            await message.reply('‚ùó | –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {0}, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!'.format(name))
    except Exception as e:
        await message.reply(f'‚ö† | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: \n {e=}, \n {type(e)=} ')


@rcon_labeler.private_message(PermissionOwners(), text='{0}–ø—Ä–∞–≤–∞'.format(prefix))
async def cmd_all_perms(message: Message):
    await message.reply("‚ôª | –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏: \n" +
                        all_perms(ret='string'))


@rcon_labeler.private_message(Permission(), text='{0}–ø—Ä–æ—Ñ–∏–ª—å'.format(prefix))
async def cmd_profile(message: Message):
    if profile(id=message.from_id, ret='status') not in ['*', '**']:
        cmd_open = check_perms(name_perms=profile(id=message.from_id, ret='perm'), ret='perms')
    else:
        cmd_open = '–≤—Å–µ –∫–æ–º–∞–Ω–¥—ã.'

    if profile(id=message.from_id, ret='status') == '**':
        cmd_add = '–í–ª–∞–¥–µ–ª–µ—Ü'
    elif profile(id=message.from_id, ret='status') == '*':
        cmd_add = '–ê–¥–º–∏–Ω'
    else:
        cmd_add = '–ù–µ—Ç—É'

    await message.reply("‚ôª | –í–∞—à –ü—Ä–æ—Ñ–∏–ª—å: \n\n" +
                        '–ü—Ä–∞–≤–∞: {0} / –î–æ–ø.–ü—Ä–∞–≤–∞: {1} ({2}) \n'.format(profile(id=message.from_id, ret='perm'),
                                                                      profile(id=message.from_id, ret='status'),
                                                                      cmd_add) +
                        '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Ä–∫–æ–Ω–∞: {0}'.format(cmd_open))


@rcon_labeler.private_message(PermissionOwners(), text='{0}–ø—Ä–∞–≤–∞ –¥–æ–ø-–¥–æ—Å—Ç—É–ø <nick> <name>'.format(prefix))
async def cmd_set_status(message: Message, nick, name):
    new_id = re.findall(r"[0-9]+", nick)[0]

    if name in ['**', '*', '0']:

        if not easy_check_user_in_base(new_id):
            await message.reply('‚ö† | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!')

        elif easy_check_status(new_id) == name:
            await message.reply('‚ö† | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç —Ç–∞–∫–æ–π –¥–æ—Å—Ç—É–ø!')

        elif str(new_id) == str(nick):
            await message.reply('‚ö† | –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø —Å–∞–º–æ–º—É —Å–µ–±–µ!')

        elif easy_check_user_in_base(new_id):
            easy_rename_status(new_id, name)
            await message.reply('‚ôª | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø {0}'.format(name))
    else:
        await message.reply('‚ö† | –î–æ—Å—Ç—É–ø {0} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'.format(name))


@rcon_labeler.private_message(Permission(), text='{0}—Ä–∫–æ–Ω <server> <cmd>'.format(prefix))
async def cmd_send(message: Message, server, cmd):
    try:
        if easy_check_server(name_server=server, ret='bool'):

            # easy_check_perms_user(id=message.from_id) = ['list', 'ban {0}']
            # cmd = ban fix

            end = cmd  # ban fixees
            end_list = end.split()  # ['ban', 'sxtyyy']

            # print(end_list)  # ['ban', 'sxtyyy']
            # print(easy_check_perms_user(id=message.from_id))

            command = difflib.get_close_matches(end_list[0],
                                                easy_check_perms_user(id=message.from_id))

            if 0 < len(command):
                command = command[0]

            if command in easy_check_perms_user(id=message.from_id):

                if '{0}' in end:
                    command_list = command.split()
                    number = 0

                    for count, i in enumerate(command_list):
                        if i == '{0}':
                            number += count

                    def replace_text(n, text):
                        command_list[n] = text
                        return command_list

                    replace_text(number, end_list[number])

                await message.reply('üóÇ | –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: /{0}\n'.format(cmd) +
                                    '–û—Ç–≤–µ—Ç: \n{0}'.format(send_message_rcon(end, server)))

            elif profile(id=message.from_id, ret='status') in ['*', '**']:

                if '{0}' in end:
                    command_list = command.split()
                    number = 0

                    for count, i in enumerate(command_list):
                        if i == '{0}':
                            number += count

                    def replace_text(n, text):
                        command_list[n] = text
                        return command_list

                    replace_text(number, end_list[number])

                await message.reply('üóÇ | –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: /{0}\n'.format(cmd) +
                                    '–û—Ç–≤–µ—Ç: \n{0}'.format(send_message_rcon(cmd, server)))

            elif command not in easy_check_perms_user(id=message.from_id):

                await message.reply('‚ùó | –í–∞–º –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É {0}'.format(cmd))

        elif not easy_check_server(name_server=server):
            await message.reply('‚ùó | –°–µ—Ä–≤–µ—Ä–∞ {0}, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'.format(server))

    except OSError:
        await message.reply('‚ùó | –°–µ—Ä–≤–µ—Ä {0}, –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—É'.format(server))
    except Exception as e:
        await message.reply(f'‚ö† | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: \n {e=}, \n {type(e)=} ')
